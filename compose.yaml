services:
  server:
    build:
      context: .
    image: delivery:latest
    environment:
      - DB_NAME=delivery
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - delivery

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=delivery
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - delivery

  migrate:
    build:
      context: .
    image: delivery:latest
    environment:
      - DB_NAME=delivery
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
    command: python manage.py migrate
    depends_on:
      db:
        condition: service_healthy
    networks:
      - delivery
volumes:
  db-data:
networks:
  delivery:
    driver: bridge

